version: "3"

networks:
  overbookd_net-api:
  traefik-public:
    external: true

volumes:
  certs:


services:
  certs-downloader:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik && wget https://traefik.me/cert.pem -O cert.pem && wget https://traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik

  traefik:
    image: traefik:v2.3
    restart: always
    command:
      # Docker config
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-public"
      # Additional config with files
      - "--providers.file=true"
      - "--providers.file.directory=/etc/traefik"
      # Entrypoint
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # HTTP -> HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # Enable Dashboard
      - "--api.dashboard=true"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/ssl/traefik
      - ./assets/traefik/tls.yml:/etc/traefik/tls.yml
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=888"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=user:$$apr1$$mv/7eBGq$$blXoet7kdjDve702x5gLx/"

  backend:
    container_name: overbookd_backend
    user: ${MY_UID}:${MY_GID}
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    restart: always
    platform: linux/x86_64
    ports:
      - 2424:3000
    networks:
      - overbookd_net-api
      - traefik-public
    volumes:
      - ./data/dev/images:/app/images
      - ../backend:/overbookd/backend
    environment:
      DOMAIN: ${OVERBOOKD_DOMAIN}
      DATABASE_URL: postgresql://${OVERBOOKD_DATABASE_USERNAME}:${OVERBOOKD_DATABASE_PASSWORD}@overbookd_postgresql:5432/${OVERBOOKD_DATABASE_NAME}
      GMAIL_USER: ${OVERBOOKD_EMAIL_USER}
      GMAIL_PASS: ${OVERBOOKD_EMAIL_PASSWORD}
      JWT_SECRET: ${OVERBOOKD_JWT_SECRET}
      SWAGGER_USER: ${OVERBOOKD_SWAGGER_USER}
      SWAGGER_PASSWORD: ${OVERBOOKD_SWAGGER_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dev-back.tls=true"
      - "traefik.http.routers.dev-back.entrypoints=websecure"
      - "traefik.http.services.dev-back.loadbalancer.server.port=3000"
      - "traefik.http.routers.dev-back.rule=(Host(`overbookd.${DOMAIN}`) && PathPrefix(`/api`))"
      - "traefik.http.routers.dev-back.middlewares=api-strip"
      - "traefik.http.middlewares.api-strip.stripprefix.prefixes=/api"
      - "com.centurylinklabs.watchtower.enable=true"
  postgresql:
    container_name: overbookd_postgresql
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${OVERBOOKD_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${OVERBOOKD_DATABASE_PASSWORD}
      - POSTGRES_DB=${OVERBOOKD_DATABASE_NAME}
    ports:
      - 5432:5432
    networks:
      - overbookd_net-api
    volumes:
      - ./data/dev/postgresql:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    networks:
      - overbookd_net-api
      - traefik-public
    environment:
      ADMINER_DEFAULT_SERVER: overbookd_postgresql
    ports:
      - 8080:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dev-adminer.tls=true"
      - "traefik.http.routers.dev-adminer.entrypoints=websecure"
      - "traefik.http.services.dev-adminer.loadbalancer.server.port=8080"
      - "traefik.http.routers.dev-adminer.rule=(Host(`overbookd.${DOMAIN}`) && PathPrefix(`/adminer`))"
      - "traefik.http.routers.dev-adminer.middlewares=adminer-strip"
      - "traefik.http.middlewares.adminer-strip.stripprefix.prefixes=/adminer"

  frontend:
    container_name: overbookd_frontend
    user: ${MY_UID}:${MY_GID}
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ../frontend:/overbookd/frontend
    environment:
      - BASE_URL
    restart: always
    networks:
      - traefik-public
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dev-front.entrypoints=websecure"
      - "traefik.http.services.dev-front.loadbalancer.server.port=3000"
      - "traefik.http.routers.dev-front.rule=Host(`overbookd.${DOMAIN}`)"
      - "traefik.http.routers.dev-front.tls=true"
