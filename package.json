{
  "name": "overbookd",
  "version": "3.48.1",
  "main": "index.js",
  "keywords": [],
  "license": "Apache-2.0",
  "private": true,
  "description": "Logiciel de gestion du festival des 24 heures de l'INSA",
  "author": "Club des 24 heures de l'INSA (https://www.24heures.org/)",
  "homepage": "https://gitlab.com/24-heures-insa/overbookd-mono",
  "repository": {
    "type": "git",
    "url": "https://gitlab.com/24-heures-insa/overbookd-mono"
  },
  "scripts": {
    "db:exec": "run(){ MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose --file ./docker/docker-compose.yml --project-name overbookd --env-file ./docker/.env exec api sh -c \"cd /overbookd/apps/api && npx $1\"; }; run",
    "db:reset": "pnpm run db:exec 'prisma migrate reset' && pnpm run db:exec 'prisma db seed'",
    "db:migrate": "pnpm run db:exec 'prisma migrate dev'",
    "ci:init": "wget -qO- https://bootstrap.pypa.io/get-pip.py | python3 && python3 -m pip install --upgrade pip && python3 -m pip install pre-commit && pre-commit install --install-hooks --overwrite && pre-commit install --hook-type commit-msg",
    "dev:bash": "docker run --rm --name overbookd_bash --interactive --tty --user $(id -g $USER):$(id -u $USER) -v $(pwd):/overbookd overbookd:dev sh --login",
    "dev:build": "docker build --tag overbookd:dev ./docker && pnpm dev:start",
    "dev:clean": "pnpm dev:down && find . -not \\( -path '*/docker/*' -prune \\) -type d \\( -name '.pnpm-store' -o -name 'node_modules' -o -name 'dist' -o -name 'coverage' -o -name '.nuxt' -o -name '.output' -o -name 'generated' \\) -prune -exec rm -r '{}' +  && docker system prune --all",
    "dev:down": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose --file ./docker/docker-compose.yml --project-name overbookd --env-file ./docker/.env down",
    "dev:init": "docker network create traefik-public && pnpm dev:build",
    "dev:logs": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose --file ./docker/docker-compose.yml --project-name overbookd --env-file ./docker/.env logs --tail 100 --follow",
    "dev:restart": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose --file ./docker/docker-compose.yml --project-name overbookd --env-file ./docker/.env restart",
    "dev:start": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose --file ./docker/docker-compose.yml --project-name overbookd --env-file ./docker/.env up --detach traefik api postgresql adminer mail_catcher web",
    "dev:stop": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose --file ./docker/docker-compose.yml --project-name overbookd --env-file ./docker/.env stop",
    "dev:sync-version": " echo 'Restarting docker containers if running to sync overbookd version' && ((docker restart overbookd_web overbookd_api || true) &)",
    "format": "pnpm --recursive run format",
    "lint": "pnpm --recursive run lint",
    "prune": "pnpm --recursive run prune",
    "preinstall": "npx only-allow pnpm",
    "release:candidate": "pnpm version prerelease --preid=rc --commit-hooks=false --git-tag-version=false",
    "release": "npx commit-and-tag-version",
    "version:bump-dependent": "pnpm --recursive --filter '...^[origin/main]' --filter '![origin/main]' run version:patch",
    "version:major-dependency": "pnpm --recursive --filter '[origin/main]' run version:major",
    "version:minor-dependency": "pnpm --recursive --filter '[origin/main]' run version:minor",
    "version:patch-dependency": "pnpm --recursive --filter '[origin/main]' run version:patch",
    "version:major:no-sync": "git fetch -ap && pnpm run version:major-dependency && pnpm run version:bump-dependent && pnpm run release:candidate",
    "version:major": "pnpm run version:major:no-sync && pnpm run dev:sync-version",
    "version:minor:no-sync": "git fetch -ap && pnpm run version:minor-dependency && pnpm run version:bump-dependent && pnpm run release:candidate",
    "version:minor": "pnpm run version:minor:no-sync && pnpm run dev:sync-version",
    "version:patch:no-sync": "git fetch -ap && pnpm run version:patch-dependency && pnpm run version:bump-dependent && pnpm run release:candidate",
    "version:patch": "pnpm run version:patch:no-sync && pnpm run dev:sync-version"
  },
  "packageManager": "pnpm@10.19.0",
  "engines": {
    "node": "22.20.0",
    "pnpm": "10.19.0"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "@nestjs/core",
      "@parcel/watcher",
      "@prisma/client",
      "@prisma/engines",
      "bcrypt",
      "esbuild",
      "prisma",
      "unrs-resolver",
      "vue-demi"
    ]
  },
  "scarfSettings": {
    "enabled": false
  },
  "devDependencies": {
    "@eslint/eslintrc": "3.3.1",
    "@eslint/js": "9.37.0",
    "@semantic-release/changelog": "6.0.3",
    "@semantic-release/git": "10.0.1",
    "@semantic-release/gitlab": "13.2.9",
    "@semantic-release/npm": "12.0.2",
    "@typescript-eslint/eslint-plugin": "8.46.0",
    "@typescript-eslint/parser": "8.46.0",
    "@vitest/coverage-v8": "3.2.4",
    "conventional-changelog-conventionalcommits": "9.1.0",
    "eslint": "9.37.0",
    "eslint-config-prettier": "10.1.8",
    "eslint-plugin-security": "3.0.1",
    "eslint-plugin-unused-imports": "4.2.0",
    "eslint-plugin-vue": "10.5.0",
    "prettier": "3.6.2",
    "semantic-release": "24.2.9",
    "ts-prune": "0.10.3",
    "tsup": "8.5.0",
    "typescript": "5.9.3",
    "typescript-eslint": "8.46.0",
    "vitest": "3.2.4",
    "vue-eslint-parser": "10.2.0"
  }
}
