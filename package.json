{
    "name": "overbookd",
    "version": "1.16.4-rc.12",
    "main": "index.js",
    "keywords": [],
    "license": "Apache-2.0",
    "description": "Logiciel de gestion du festival des 24 heures de l'INSA",
    "author": "Club des 24 heures de l'INSA (https://www.24heures.org/)",
    "homepage": "https://gitlab.com/24-heures-insa/overbookd-mono",
    "repository": {
        "type": "git",
        "url": "https://gitlab.com/24-heures-insa/overbookd-mono"
    },
    "scripts": {
        "db:exec": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose -f ./docker/docker-compose.yml -p dev --env-file ./docker/dev.env exec api sh -c \"cd /overbookd/apps/api && npx $npm_config_command\"",
        "dev:build": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose -f ./docker/docker-compose.yml -p dev --env-file ./docker/dev.env up -d --build",
        "dev:down": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose -f ./docker/docker-compose.yml -p dev --env-file ./docker/dev.env down",
        "dev:init": "docker network create traefik-public && pnpm dev:build",
        "dev:logs": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose -f ./docker/docker-compose.yml -p dev --env-file ./docker/dev.env logs --tail 100 -f",
        "dev:restart": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose -f ./docker/docker-compose.yml -p dev --env-file ./docker/dev.env restart",
        "dev:start": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose -f ./docker/docker-compose.yml -p dev --env-file ./docker/dev.env up -d",
        "dev:stop": "MY_GID=$(id -g $USER) MY_UID=$(id -u $USER) docker compose -f ./docker/docker-compose.yml -p dev --env-file ./docker/dev.env stop",
        "dev:bash": "[ ! \"$(docker image ls | grep overbookd-bash)\" ] && docker build --tag overbookd-bash ./docker/ || docker run --rm --name overbookd-bash --interactive --tty --user $(id -g $USER):$(id -u $USER) -v ./:/app overbookd-bash sh --login",
        "preinstall": "npx only-allow pnpm",
        "prerelease": "pnpm --recursive --filter '{apps/**}' run prerelease"
    },
    "packageManager": "pnpm@8.6.6",
    "engines": {
        "node": ">=16",
        "pnpm": ">=8"
    }
}