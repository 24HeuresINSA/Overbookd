containerize-frontend:
  only:
    changes:
      - frontend/**/*
    refs:
      - main
      - pre-prod
  except:
    - schedules
  image: docker
  needs: ["buildx"]
  services:
    - name: docker:dind
      command: ["--experimental"]
  stage: docker
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - mv buildx ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then VERSION_TAG=$(cat ./frontend/package.json | grep version | tr -d '[[:space:]]' | sed 's/version//g' | sed 's/[\",:]//g'); else VERSION_TAG=${CI_COMMIT_REF_NAME}_$(cat ./frontend/package.json | grep version | tr -d '[[:space:]]' | sed 's/version//g' | sed 's/[\",:]//g'); fi
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then TAG="latest"; else TAG=$CI_COMMIT_REF_NAME; fi

  script:
    - docker buildx create --use
    - docker buildx build --push --platform linux/amd64,linux/arm64 --tag $CI_REGISTRY_IMAGE/frontend:$VERSION_TAG --tag $CI_REGISTRY_IMAGE/frontend:$TAG --build-arg BASE_URL=$BASE_URL ./frontend

merge_requests_containerize-frontend:
    only:
      changes:
        - frontend/**/*
      refs:
        - merge_requests
    image: docker
    needs: ["buildx"]
    services:
      - name: docker:dind
        command: ["--experimental"]
    stage: docker
    before_script:
      - mkdir -p ~/.docker/cli-plugins
      - mv buildx ~/.docker/cli-plugins/docker-buildx
      - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    script:
      - docker buildx create --use
      - docker buildx build --platform linux/amd64,linux/arm64 --build-arg BASE_URL=$BASE_URL --build-arg BASE_URL_KEYCLOAK=$BASE_URL_KEYCLOAK ./frontend
