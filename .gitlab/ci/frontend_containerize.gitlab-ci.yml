containerize-frontend:
  image: docker
  services:
    - name: docker:dind
      command: ["--experimental"]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - frontend/**/*
    - if: '$CI_COMMIT_BRANCH == "pre-prod"'
      changes:
        - frontend/**/*
    - when: never
  stage: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then VERSION_TAG=$(cat ./frontend/package.json | grep version | tr -d '[[:space:]]' | sed 's/version//g' | sed 's/[\",:]//g'); else VERSION_TAG=${CI_COMMIT_REF_NAME}_$(cat ./frontend/package.json | grep version | tr -d '[[:space:]]' | sed 's/version//g' | sed 's/[\",:]//g'); fi
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then TAG="latest"; else TAG=$CI_COMMIT_REF_NAME; fi
  script:
    - docker build --tag $CI_REGISTRY_IMAGE/frontend:$VERSION_TAG --tag $CI_REGISTRY_IMAGE/frontend:$TAG --build-arg BASE_URL=$BASE_URL ./frontend
    - docker push $CI_REGISTRY_IMAGE/frontend:$VERSION_TAG
    - docker push $CI_REGISTRY_IMAGE/frontend:$TAG

merge_requests_containerize-frontend:
  image: docker
  services:
    - name: docker:dind
      command: ["--experimental"]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - frontend/**/*
    - when: never
  stage: docker
  script:
    - docker build ./frontend
