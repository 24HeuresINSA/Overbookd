.docker:
  stage: docker
  interruptible: true
  image: docker
  services:
    - name: docker:dind
      command: ["--experimental"]
  needs: []
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/$SCOPE:builder || true
    - docker build --target builder --cache-from $CI_REGISTRY_IMAGE/$SCOPE:builder --tag $CI_REGISTRY_IMAGE/$SCOPE:builder ./$SCOPE
    - docker push $CI_REGISTRY_IMAGE/$SCOPE:builder


.mr-container:
  extends: .docker
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE/$SCOPE:builder --tag $CI_REGISTRY_IMAGE/$SCOPE:$CI_COMMIT_SHORT_SHA ./$SCOPE
    - docker push $CI_REGISTRY_IMAGE/$SCOPE:$CI_COMMIT_SHORT_SHA

m-r_backend_container:
  extends: .mr-container
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - backend/**/*
    - when: never
  variables:
    SCOPE: backend

m-r_frontend_container:
  extends: .mr-container
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - frontend/**/*
    - when: never
  variables:
    SCOPE: frontend


.release-container:
  extends: .docker
  script:
    - VERSION_TAG=${VERSION_TAG_PREFIX}$(cat ./${SCOPE}/package.json | grep version | head -1  | head -1  | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
    - docker build --cache-from $CI_REGISTRY_IMAGE/$SCOPE:builder --tag $CI_REGISTRY_IMAGE/$SCOPE:$VERSION_TAG --tag $CI_REGISTRY_IMAGE/$SCOPE:$TAG ./$SCOPE
    - docker push $CI_REGISTRY_IMAGE/$SCOPE:$VERSION_TAG
    - docker push $CI_REGISTRY_IMAGE/$SCOPE:$TAG

preprod_backend_container:
  extends: .release-container
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - backend/**/*
    - when: never
  variables:
    SCOPE: backend
    VERSION_TAG_PREFIX: "pre-prod_"
    TAG: "pre-prod"

preprod_frontend_container:
  extends: .release-container
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - frontend/**/*
    - when: never
  variables:
    SCOPE: frontend
    VERSION_TAG_PREFIX: "pre-prod_"
    TAG: "pre-prod"

prod_backend_container:
  extends: .release-container
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - backend/**/*
      when: manual
    - when: never
  variables:
    SCOPE: backend
    VERSION_TAG_PREFIX: ""
    TAG: "latest"

prod_frontent_container:
  extends: .release-container
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - frontend/**/*
      when: manual
    - when: never
  variables:
    SCOPE: frontend
    VERSION_TAG_PREFIX: ""
    TAG: "latest"