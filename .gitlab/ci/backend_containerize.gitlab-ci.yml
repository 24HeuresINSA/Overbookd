containerize-backend:
  image: docker
  services:
    - name: docker:dind
      command: ["--experimental"]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - backend/**/*
    - if: '$CI_COMMIT_BRANCH == "pre-prod"'
      changes:
        - backend/**/*
    - when: never
  stage: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then VERSION_TAG=$(cat ./backend/package.json | grep version | head -1  | head -1  | sed 's/[version:,\",]//g' | tr -d '[[:space:]]'); else VERSION_TAG=${CI_COMMIT_REF_NAME}_$(cat ./backend/package.json | grep version | head -1  | head -1  | sed 's/[version:,\",]//g' | tr -d '[[:space:]]'); fi
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then TAG="latest"; else TAG=$CI_COMMIT_REF_NAME; fi
  script:
    - docker build --tag $CI_REGISTRY_IMAGE/backend:$VERSION_TAG --tag $CI_REGISTRY_IMAGE/backend:$TAG ./backend
    - docker push $CI_REGISTRY_IMAGE/backend:$VERSION_TAG
    - docker push $CI_REGISTRY_IMAGE/backend:$TAG

merge_requests_containerize-backend:
  interruptible: true
  image: docker
  services:
  - name: docker:dind
    command: ["--experimental"]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - backend/**/*
    - when: never
  stage: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA ./backend
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA
