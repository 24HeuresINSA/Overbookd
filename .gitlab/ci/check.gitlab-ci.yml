include:
  - local: /.gitlab/ci/setup-pnpm.gitlab-ci.yml
  - local: /.gitlab/ci/setup-git.gitlab-ci.yml

.check:
  stage: check
  interruptible: true

.security: &security
  stage: check
  needs: []
  interruptible: true
  rules:
    - if: '($CI_PIPELINE_SOURCE == "schedule") && ($SECURITY_SCAN  == "1")'
      when: always
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never

gemnasium-dependency_scanning:
  <<: *security
  variables:
    DS_MAX_DEPTH: 5

gemnasium-python-dependency_scanning:
  <<: *security
  variables:
    DS_MAX_DEPTH: 5

semgrep-sast:
  <<: *security

secret_detection:
  <<: *security

.format:
  extends: .check
  image: node:20.17.0-alpine
  before_script:
    - !reference [.setup-git, script]
    - !reference [.setup-pnpm, before_script]
    - git checkout -b $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME ssh_origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

overbookd/format:
  extends: .format
  needs: [install]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - apps/**/*
        - libraries/**/*
        - domains/**/*
        - constants/**/*
    - when: never
  script:
    - pnpm run format
    - pnpm run lint
    - "git commit -am 'style: ✍ run format and lint on all modules' || true"
    - git push ssh_origin HEAD:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME || true

overbookd/prune:
  extends: .check
  image: node:20.17.0-alpine
  needs: [install]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - apps/**/*
        - libraries/**/*
        - domains/**/*
        - constants/**/*
    - when: never
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
    - pnpm i
  script:
    - pnpm run prune
