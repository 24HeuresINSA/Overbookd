.check:
  stage: check
  interruptible: true

.security: &security
  stage: check
  needs: []
  interruptible: true
  rules:
    - if: '($CI_PIPELINE_SOURCE == "schedule") && ($LICENSE_SCANNING  == "1")'
      when: always
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always
    - when: never

license_scanning:
  <<: *security
  variables:
    LICENSE_FINDER_CLI_OPTS: "--aggregate_paths=frontend backend"

nodejs-scan-sast:
  <<: *security

semgrep-sast:
  <<: *security
  
secret_detection:
  <<: *security


.lint:
  extends: .check
  image: node
  before_script:
    - eval $(ssh-agent -s)
    - mkdir ~/.ssh/
    - echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "Host gitlab.com" >> ~/.ssh/config
    - echo "IdentityFile ~/.ssh/id_rsa" >> ~/.ssh/config
    - echo "StrictHostKeyChecking no" >> ~/.ssh/config
    - git config user.email "dsi@24heures.org"
    - git config user.name "24-bot"
    - git remote remove ssh_origin || true  # Local repo state may be cached
    - git remote add ssh_origin "git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git"
    - git fetch --all
    - git checkout -b $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME ssh_origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

frontend_lint:
  extends: .lint
  needs: [frontend_install]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - frontend/**/*
    - when: never
  script:
    - cd frontend
    - npm run lint
    - "git commit -am 'style(Front): ✍ Linted frontend files' || true"
    - git push ssh_origin HEAD:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME || true

backend_lint:
  extends: .lint
  needs: [backend_install]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - backend/**/*
    - when: never
  script:
    - cd backend
    - npm run lint
    - "git commit -am 'style(Back): ✍ Linted backend files' || true"
    - git push ssh_origin HEAD:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME || true


.ts-prune:
  extends: .check
  image: node

backend_ts-prune:
  extends: .ts-prune
  needs: [backend_install]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - backend/**/*
    - when: never
  script:
    - cd backend
    - npm run find-deadcode