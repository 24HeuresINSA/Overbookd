unconfidentializer:
  stage: unconfidentializer
  image: alpine
  before_script:
    - apk update
    - apk add --update coreutils
    - apk add jq 
    - apk add curl
  script:
    - echo "Get confidential issues"
    - |
      ISSUES=$(curl --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/issues?confidential=true" | jq '.[] | {iid, labels}' | jq -s '.')
      for ISSUE in $(echo "${ISSUES}" | jq -c '.[]');
      do
        _jq() {
          echo ${ISSUE} | jq -r "${1}"
        }

        IID=$(_jq '.iid')
        LABELS=$(_jq '.labels')

        echo "Unconfidentializing issue ${IID}"
        echo "Labels: ${LABELS}"

        if [ $(echo $LABELS | jq -e '.[] | select(. == "Type::Security")') ];
        then
          echo "Issue ${IID} is a security issue, skipping"
        else
          curl --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" --request "PUT" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/issues/$IID" --header 'Content-Type: application/json' --data-raw '{"confidential":false}';
        fi
      done
  rules:
    - if: '($CI_PIPELINE_SOURCE == "schedule") &&( $UNCONFIDENTIALIZER == "1")'
      when: always
    - when: never
