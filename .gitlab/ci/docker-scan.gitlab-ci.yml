container_scanning:
  interruptible: true
  allow_failure: false
  stage: docker-scan
  rules:
    - when: never
  before_script:
    - sudo apt update
    - sudo apt install curl -y
    - sudo apt install jq -y
    - APP_NAME=$(jq -r '.name' ./${APP_PATH}/package.json)

"@overbookd/web_scan":
  extends: container_scanning
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - ${APP_PATH}/**/*
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - ${APP_PATH}/**/*
  needs: ["preprod_@overbookd/web_docker_build"]
  variables:
    APP_PATH: apps/web
    CS_IMAGE: $CI_REGISTRY_IMAGE/${APP_NAME}:$CI_COMMIT_SHORT_SHA
    CS_DOCKERFILE_PATH: "${APP_PATH}/Dockerfile"
  after_script:
    - 'curl --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" --request "DELETE" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/registry/repositories/2685416/tags/$CI_COMMIT_SHORT_SHA"'

"@overbookd/api_scan":
  extends: container_scanning
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - ${APP_PATH}/**/*
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - ${APP_PATH}/**/*
  needs: ["@overbookd/api_docker_build"]
  variables:
    APP_PATH: apps/api
    CS_IMAGE: $CI_REGISTRY_IMAGE/${APP_NAME}:$CI_COMMIT_SHORT_SHA
    CS_DOCKERFILE_PATH: "${APP_PATH}/Dockerfile"
  after_script:
    - 'curl --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" --request "DELETE" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/registry/repositories/2685488/tags/$CI_COMMIT_SHORT_SHA"'
