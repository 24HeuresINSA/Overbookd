resource_rules:
  merge_requests:
    rules:
      - name: find all opened MR without running release:candidate command
        conditions:
          state: opened
          draft: false
          ruby: |
            target_branch_response = HTTParty.get("https://gitlab.com/24-heures-insa/overbookd-mono/-/raw/#{resource[:target_branch]}/package.json")
            target_branch_version = JSON.parse(target_branch_response.body)["version"]
            source_branch_response = HTTParty.get("https://gitlab.com/24-heures-insa/overbookd-mono/-/raw/#{resource[:source_branch]}/package.json")
            source_branch_version = JSON.parse(source_branch_response.body)["version"]

            auth = "Bearer " + ENV["GITLAB_API_TOKEN"]

            MR_diffs = HTTParty.get("https://gitlab.com/api/v4/projects/#{resource[:project_id]}/merge_requests/#{resource[:iid]}/changes", :headers => { "Authorization" => auth})
            MR_notes = HTTParty.get("https://gitlab.com/api/v4/projects/#{resource[:project_id]}/merge_requests/#{resource[:iid]}/notes", :headers => { "Authorization" => auth})

            JSON.parse(MR_notes.body).each do |note|
              if note["body"].include?("The version of overbookd has not been updated.")
                return false
              end
            end

            JSON.parse(MR_diffs.body)["changes"].each do |change|
              return target_branch_version == source_branch_version
            end

            return false

        actions:
          comment_type: thread
          comment: |
            Hi {{author}},

            The version of overbookd has not been updated.

            Make sure to run `pnpm release:candidate` locally.

            If it's already done rebase on `main` without your changes on package.json files and run it again.
